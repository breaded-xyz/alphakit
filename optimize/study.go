package optimize

import (
	"github.com/colngroup/zero2algo/internal/util"
	"github.com/colngroup/zero2algo/market"
)

// Study is an optimization experiment. The subject is a trading algo and its parameter space.
// Hypothesis: the optimized algo params will generate positive market returns in live trading
// Null hypothesis: algo has zero positive expectancy of returns in the tested param space
// Independent variable (aka predictor / feature): algo parameter space []ParamSet
// Dependent variable: algo performance (Sharpe, CAGR et al) as ParamSetReport
// Control variables: price data sample, backtest simulator settings etc
// Study is generated by an Optimizer.
type Study struct {
	Samples [][]market.Kline

	Training        map[ParamSetID]ParamSet
	TrainingResults map[ParamSetID]ParamSetReport

	Optima        map[ParamSetID]ParamSet
	OptimaResults map[ParamSetID]ParamSetReport
}

type ParamSet struct {
	ID     ParamSetID
	Params map[string]any
}

type ParamSetID string

type ParamSetReport struct {
	CAGR   float64
	PRR    float64
	Sharpe float64
	Calmar float64
}

func NewParamSet() ParamSet {
	return ParamSet{ID: ParamSetID(util.NewID())}
}
